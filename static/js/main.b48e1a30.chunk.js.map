{"version":3,"sources":["components/Join/Join.js","components/Util/util.js","components/StatisticContainer/StatisticContainer.js","components/TextContainer/TextContainer.js","components/BlindPrintingSimulator/BlindPrintingSimulator.js","App.js","index.js"],"names":["Join","className","to","INPUT_PATTERN","classList","StatisticContainer","data","printAccuracy","count","numberOfCorrectSymbols","statisticComplete","printSpeed","Math","round","useState","time","setTime","useEffect","moment","utc","format","text","length","toFixed","TextContainer","classNames","isTimerStart","setIsTimerStart","setPrintAccuracy","setCount","timer","useRef","numberOfpassedSymbols","setNumberOfpassedSymbols","window","addEventListener","isIncorrectInput","reduceAccuracy","evt","filteredInput","test","key","keyHandle","startTimer","stopTimer","clearInterval","current","setInterval","split","map","symbol","index","BlindPrintingSimulator","setData","error","setError","fetchData","a","response","fetch","json","responseData","Array","from","errorMessage","onClick","Spinner","animation","variant","App","Container","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b48e1a30.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Join.css\";\r\n\r\nconst Join = () => {\r\n  return (\r\n    <div className=\"outer-container\">\r\n      <h1>Добро пожаловать!</h1>\r\n      <p className=\"intro\">\r\n        Вы по-прежнему набираете текст на клавиатуре двумя пальцами и смотрите\r\n        на клавиатуру во время ввода текста?\r\n      </p>\r\n      <p className=\"intro\">\r\n        На нашём сайте каждый человек может в обучиться и достичь совершенства в\r\n        навыке печати.\r\n      </p>\r\n        <Link className=\"btn btn-primary\" to=\"/blind-printing-simulator\">\r\n          Перейти к тренажёру\r\n        </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Join;\r\n","export const URL = 'https://fish-text.ru/get?&number=1';\r\nexport const INPUT_PATTERN = /[а-яё0-9- .,?!:;)(\"%№]/i;\r\nexport const UPDATE_TIME = 1000;\r\nexport const classList = {\r\n  SYMBOL: \"symbol\",\r\n  SYMBOL_PASSED: \"symbol symbol--passed\",\r\n  SYMBOL_UNPASSED: \"symbol symbol--unpassed\",\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport \"./StatisticContainer.css\";\r\nimport moment from \"moment\";\r\n\r\nconst StatisticContainer = ({data, printAccuracy, count, numberOfCorrectSymbols, statisticComplete}) => {\r\n  let printSpeed = Math.round((numberOfCorrectSymbols / count) * 60);\r\n  const [time, setTime] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setTime(moment.utc(count * 1000).format(\"mm:ss\"));\r\n  }, [count]);\r\n\r\n  return (\r\n    <div className={statisticComplete ? statisticComplete : \"statistic\"}>\r\n      <div className=\"statistic__accuracy\">\r\n        Точность печати:{\" \"}\r\n        {count\r\n          ? (\r\n              ((data.text.length - printAccuracy) / data.text.length) *\r\n              100\r\n            ).toFixed(2)\r\n          : \"\"}%\r\n      </div>\r\n      <div className=\"statistic__speed\">\r\n        Скорость печати: {count ? printSpeed : 0} символов/мин.\r\n      </div>\r\n      <div className=\"statistic__time\">Время печати: {count ? time : 0} с.</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatisticContainer;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { classList, INPUT_PATTERN, UPDATE_TIME } from \"../Util/util\";\r\nimport StatisticContainer from \"../StatisticContainer/StatisticContainer\";\r\n\r\nimport \"./TextContainer.css\";\r\n\r\nconst TextContainer = ({ data }) => {\r\n  let numberOfCorrectSymbols = 0;\r\n\r\n  const classNames = data.classNames;\r\n\r\n  const [isTimerStart, setIsTimerStart] = useState(false);\r\n  const [printAccuracy, setPrintAccuracy] = useState(0);\r\n  const [count, setCount] = useState(0);\r\n  const timer = useRef(null);\r\n\r\n  const [numberOfpassedSymbols, setNumberOfpassedSymbols] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const keyHandle = () => {\r\n      let isIncorrectInput = false;\r\n      let reduceAccuracy = 0;\r\n\r\n      return (evt) => {\r\n        let filteredInput = INPUT_PATTERN.test(evt.key) ? evt.key : null;\r\n         if (\r\n          filteredInput &&\r\n          data.text[numberOfCorrectSymbols] === filteredInput\r\n        ) {\r\n          classNames[numberOfCorrectSymbols] = classList.SYMBOL_PASSED;\r\n          numberOfCorrectSymbols++;\r\n          setNumberOfpassedSymbols(numberOfCorrectSymbols);\r\n          isIncorrectInput = false;\r\n          setIsTimerStart(true);\r\n        } else if (!filteredInput) {\r\n          return;\r\n        } else {\r\n          classNames[numberOfCorrectSymbols] = classList.SYMBOL_UNPASSED;\r\n          if (!isIncorrectInput) {\r\n            reduceAccuracy++;\r\n            setPrintAccuracy(reduceAccuracy);\r\n          }\r\n          isIncorrectInput = true;\r\n        }\r\n        if (numberOfCorrectSymbols === data.text.length) {\r\n            setIsTimerStart(false);\r\n          }\r\n      };\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", keyHandle());\r\n  }, [classNames, data.text, numberOfCorrectSymbols]);\r\n\r\n  useEffect(() => {\r\n    if (isTimerStart) {\r\n      startTimer();\r\n    } else {\r\n      stopTimer();\r\n    }\r\n    return () => clearInterval(timer.current);\r\n  }, [isTimerStart]);\r\n\r\n  const startTimer = () => {\r\n    timer.current = setInterval(() => {\r\n      setCount((count) => count + 1);\r\n    }, UPDATE_TIME);\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    clearInterval(timer.current);\r\n  };\r\n\r\n  return (\r\n    <div className=\"text-block\">\r\n      <StatisticContainer\r\n        data={data}\r\n        printAccuracy={printAccuracy}\r\n        count={count}\r\n        numberOfCorrectSymbols={numberOfpassedSymbols}\r\n      />\r\n      <div>\r\n        {data.text.split(\"\").map((symbol, index) => (\r\n          <span className={classNames[index]} key={index}>\r\n            {symbol}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TextContainer from \"../TextContainer/TextContainer\";\r\nimport { URL, classList } from \"../Util/util\";\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nimport \"./BlindPrintingSimulator.css\";\r\n\r\nconst BlindPrintingSimulator = () => {\r\n  const [data, setData] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const fetchData = async () => {\r\n    let responseData;\r\n    let response = null;\r\n    let errorMessage;\r\n    try {\r\n      response = await fetch(URL);\r\n      responseData = await response.json();\r\n      responseData.classNames = Array.from(\r\n        { length: responseData.text.length },\r\n        () => classList.SYMBOL\r\n      );\r\n      setData(responseData);\r\n    } catch (error) {\r\n      errorMessage = error;\r\n      setError(errorMessage);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const returnToStart = () => {\r\n    setData(\"\");\r\n    setError(\"\");\r\n    fetchData();\r\n  };\r\n\r\n  return data ? (\r\n    <div className=\"outer-container\">\r\n      <h2>Тренажёр слепой печати</h2>\r\n      <TextContainer data={data} />\r\n      <Link className=\"btn btn-dark\" to=\"/\">\r\n        Назад\r\n      </Link>\r\n      <button className=\"btn btn-info\" onClick={returnToStart}>Начать заново</button>\r\n    </div>\r\n  ) : error ? (\r\n    <div className=\"outer-container outer-container--error\">\r\n      <div className=\"error-msg\">Ошибка загрузки данных</div>\r\n      <div>\r\n        <Link className=\"btn btn-dark\" to=\"/\">\r\n          Назад\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"outer-container outer-container--spinner\">\r\n      <Spinner animation=\"grow\" variant=\"dark\" />\r\n      <Spinner animation=\"grow\" variant=\"dark\" />\r\n      <Spinner animation=\"grow\" variant=\"dark\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlindPrintingSimulator;\r\n","import React from \"react\";\nimport Join from \"./components/Join/Join\";\nimport BlindPrintingSimulator from \"./components/BlindPrintingSimulator/BlindPrintingSimulator\";\nimport Container from \"react-bootstrap/Container\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <Container>\n      <Router>\n        <Route path=\"/\" exact component={Join} />\n        <Route\n          path=\"/blind-printing-simulator\"\n          component={BlindPrintingSimulator}\n        />\n      </Router>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}